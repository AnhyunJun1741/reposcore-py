name: Python CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # 토큰 명시적 설정
          # persist-credentials: false 제거!

      - name: Python 환경 설정
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: 의존성 설치
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: pylint 코드 스타일 검사
        run: |
          pylint $(git ls-files '*.py')
      
      - name: pytest를 사용한 테스트 실행
        run: |
          pytest tests --verbose --junitxml=test-results.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 통일

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml

      - name: README.md 자동 생성 
        run: |
          python scripts/generate_readme.py # ← README 생성 스크립트 실행

      - name: 변경 사항 커밋 및 푸시 
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md
          git diff --cached --quiet && echo "README 변경 없음 - 커밋 생략됨" || (
            echo "README 변경 감지 = 커밋 및 푸시 실행"
            git commit -m "docs: 자동 생성된 README 갱신"  # ← 변경 있을 경우에만 커밋
            git push
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}